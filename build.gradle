apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.7
version = '1.0-SNAPSHOT'
group = 'com.sciul'

repositories {
    mavenCentral()
}

buildscript {
   repositories {
      mavenCentral()
      maven { url "https://oss.sonatype.org/content/groups/public"}
   }
   dependencies {
      classpath 'com.github.townsfolk:gradle-release:1.2'
   }
}
apply plugin: 'release'

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task javadocJar (type: Jar, dependsOn: javadoc) { // (1)
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourceJar (type : Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

ext {
    pomFilePath = "${project.projectDir}/tmp/pom.xml"
    pomFile = file(pomFilePath)
}

configurations {
    pom
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
    if (pomFile.exists()) {
        pom pomFile
    }
}

task signJars (type : Sign, dependsOn: [jar, javadocJar, sourceJar]) {
    sign configurations.archives
}

task signPom(type: Sign) {
    sign configurations.pom
}

if (project.ext.pomFile.exists()) {
    task preparePublication (dependsOn : [signJars, signPom])
} else {
    task preparePublication (dependsOn : signJars)
}

def getSignatureFiles = {
    def allFiles = project.tasks.signJars.signatureFiles.collect { it }
    def signedSources = allFiles.find { it.name.contains('-sources') }
    def signedJavadoc = allFiles.find { it.name.contains('-javadoc') }
    def signedJar = (allFiles - [signedSources, signedJavadoc])[0]
    return [
            [archive: signedSources, classifier: 'sources', extension: 'jar.asc'],
            [archive: signedJavadoc, classifier: 'javadoc', extension: 'jar.asc'],
            [archive: signedJar,     classifier: null,      extension: 'jar.asc']
    ]
}

def getPomSignature = {
    return project.tasks.signPom.signatureFiles.collect{it}[0]
}


jar {
    manifest {
        attributes 'es-adapter': 'Elasticsearch Adapter for Search, Index and aggregarion', 'Implementation-Version': version
    }
}

test {
    systemProperties 'property': 'value'
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
               name 'Es-Adapter'
               packaging 'jar'
               description 'Elasticsearch Adapter for Search, Index and aggregarion'
               url 'https://github.com/ulini/es-adapter'

               scm {
                   url 'scm:git@github.com:ulini/es-adapter.git'
                   connection 'scm:git@github.com:ulini/es-adapter.git'
                   developerConnection 'scm:git@github.com:ulini/es-adapter.git'
               }

               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'GC'
                       name 'gc'
                   }
                   developer {
                       id 'SR'
                       name 'sr'
                   }
               }
           }
        }
    }
}

